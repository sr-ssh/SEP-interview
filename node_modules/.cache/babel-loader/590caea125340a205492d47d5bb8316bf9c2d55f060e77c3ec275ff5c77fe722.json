{"ast":null,"code":"var _jsxFileName = \"/home/reihaneh/Documents/dev/interviews/SEP/src/containers/RecentMovies.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Skeleton from \"@mui/material/Skeleton\";\nimport Grid2 from \"@mui/material/Unstable_Grid2/Grid2\";\nimport { useGetMoviesQuery } from \"../reducer/apiSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecentMovies() {\n  _s();\n  const {\n    data,\n    isFetching\n  } = useGetMoviesQuery();\n  return /*#__PURE__*/_jsxDEV(Grid2, {\n    container: true,\n    display: \"grid\",\n    gap: 5,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      color: \"text.secondary\",\n      fontWeight: 700,\n      children: \"Recent Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        overflowX: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        columnGap: 2,\n        flexWrap: \"nowrap\",\n        children: true ? [...Array(4)].map(item => /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Grid2, {\n            sx: {\n              width: \"84px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n              variant: \"rectangular\",\n              sx: {\n                width: \"84px\",\n                height: \"108px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              variant: \"text\",\n              width: \"60%\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                color: \"text.secondary\",\n                children: \".\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 31\n        }, this)) : data.Search.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Grid2, {\n            sx: {\n              width: \"84px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.Poster,\n              alt: item.Title,\n              width: 84,\n              height: 108,\n              style: {\n                borderRadius: 4,\n                border: \"2px solid #3a3d48\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"text.secondary\",\n              children: item.Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(RecentMovies, \"ODYtH6ynOJWMDu0hxuSpbEe+GQg=\", false, function () {\n  return [useGetMoviesQuery];\n});\n_c = RecentMovies;\nvar _c;\n$RefreshReg$(_c, \"RecentMovies\");","map":{"version":3,"names":["React","Box","Typography","Grid","Skeleton","Grid2","useGetMoviesQuery","jsxDEV","_jsxDEV","RecentMovies","_s","data","isFetching","container","display","gap","children","variant","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","sx","overflowX","columnGap","flexWrap","Array","map","item","width","height","Search","src","Poster","alt","Title","style","borderRadius","border","_c","$RefreshReg$"],"sources":["/home/reihaneh/Documents/dev/interviews/SEP/src/containers/RecentMovies.jsx"],"sourcesContent":["import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Skeleton from \"@mui/material/Skeleton\";\nimport Grid2 from \"@mui/material/Unstable_Grid2/Grid2\";\nimport { useGetMoviesQuery } from \"../reducer/apiSlice\";\n\nexport default function RecentMovies() {\n    const { data, isFetching } = useGetMoviesQuery();\n\n    return (\n        <Grid2 container display=\"grid\" gap={5}>\n            <Typography variant=\"h5\" color=\"text.secondary\" fontWeight={700}>\n                Recent Movies\n            </Typography>\n            <Box sx={{ overflowX: \"auto\" }}>\n                <Grid container columnGap={2} flexWrap=\"nowrap\">\n                    {true\n                        ? [...Array(4)].map((item) => (\n                              <Grid>\n                                  <Grid2 sx={{ width: \"84px\" }}>\n                                      <Skeleton\n                                          variant=\"rectangular\"\n                                          sx={{\n                                              width: \"84px\",\n                                              height: \"108px\",\n                                          }}\n                                      />\n                                      <Skeleton variant=\"text\" width=\"60%\">\n                                          <Typography\n                                              variant=\"subtitle1\"\n                                              color=\"text.secondary\"\n                                          >\n                                              .\n                                          </Typography>\n                                      </Skeleton>\n                                  </Grid2>\n                              </Grid>\n                          ))\n                        : data.Search.map((item) => (\n                              <Grid>\n                                  <Grid2 sx={{ width: \"84px\" }}>\n                                      <img\n                                          src={item.Poster}\n                                          alt={item.Title}\n                                          width={84}\n                                          height={108}\n                                          style={{\n                                              borderRadius: 4,\n                                              border: \"2px solid #3a3d48\",\n                                          }}\n                                      />\n                                      <Typography\n                                          variant=\"subtitle1\"\n                                          color=\"text.secondary\"\n                                      >\n                                          {item.Title}\n                                      </Typography>\n                                  </Grid2>\n                              </Grid>\n                          ))}\n                </Grid>\n            </Box>\n        </Grid2>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}